{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","placeholder","required","onChange","onBlur","validate","useState","Math","random","toFixed","slice","id","touched","setTouched","hasError","trim","htmlFor","type","classNames","event","target","NewMovie","onAdd","pattern","count","submitDisabled","setSubmitDisabled","setMovie","errors","setErrors","handleChange","isValid","every","field","validateForm","handBlur","onSubmit","preventDefault","some","prevErrors","test","disabled","App","moviesFromServer","setMovies","newMovie","currentMovies","ReactDOM","render","document","getElementById"],"mappings":"2uEAQaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,sBAAKC,UAAU,OAAO,UAAQ,aAA9B,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,YACP,uBACA,mBAAGC,KAAMP,EAAMQ,QAAf,0BA5BkC,ECE7BC,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKT,UAAU,SAAf,SACGS,EAAOC,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMY,OAFE,KAFsB,E,8BCUpC,IAAMC,EAA6B,SAAC,GASpC,IARLC,EAQI,EARJA,KACAC,EAOI,EAPJA,MAOI,IANJC,aAMI,MANIF,EAMJ,MALJG,mBAKI,sBALmBD,GAKnB,MAJJE,gBAII,aAHJC,gBAGI,MAHO,WAAQ,EAGf,MAFJC,cAEI,MAFK,WAAQ,EAEb,MADJC,gBACI,MADO,kBAAM,CAAN,EACP,EACJ,EAAaC,oBAAS,2BAASR,EAAT,YAffS,KAAKC,SACTC,QAAQ,IACRC,MAAM,GAaa,IAAfC,EAAP,oBAEA,EAA8BL,oBAAS,GAAvC,mBAAOM,EAAP,KAAgBC,EAAhB,KACMC,EAAWF,GAAWV,KAAcH,EAAMgB,SAC5CV,EAASN,EAAMgB,SAEnB,OACE,sBAAK9B,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQ+B,QAASL,EAAlC,SACGX,IAGH,qBAAKf,UAAU,UAAf,SACE,uBACEgC,KAAK,OACLN,GAAIA,EACJ,0BAAkBb,GAClBb,UAAWiC,IAAW,QAAS,CAC7B,YAAaJ,IAEfb,YAAaA,EACbF,MAAOA,EACPI,SAAU,SAAAgB,GAAK,OAAIhB,EAASgB,EAAMC,OAAOrB,MAA1B,EACfK,OAAQ,WACNS,GAAW,GACXT,GACD,MAIHQ,GAAWE,GACX,mBAAG7B,UAAU,iBAAb,SACGiB,IAAaH,EAAb,UACMC,EADN,kCAEcA,OAKxB,EC7DYqB,EAA4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAEpCC,EAAU,uKAEhB,EAAgBjB,mBAAS,GAAlBkB,EAAP,oBACA,EAA4ClB,oBAAS,GAArD,mBAAOmB,EAAP,KAAuBC,EAAvB,KAEA,EAA0BpB,mBAAgB,CACxCjB,MAAO,GACPC,YAAa,GACbH,OAAQ,GACRK,QAAS,GACTI,OAAQ,KALV,mBAAOZ,EAAP,KAAc2C,EAAd,KAQA,EAA4BrB,mBAAS,CACnCjB,OAAO,EACPF,QAAQ,EACRK,SAAS,EACTI,QAAQ,IAJV,mBAAOgC,EAAP,KAAeC,EAAf,KAeMC,EAAe,SAAChC,EAAmBC,GACvC4B,EAAS,2BACJ3C,GADG,kBAELc,EAAOC,KAGV8B,EAAU,2BACLD,GADI,kBAEN9B,GAAO,KAhBS,WACnB,IAAMiC,EAAU,CAAC,QAAS,SAAU,UAAW,UAAUC,OACvD,SAACC,GAAD,MAAmC,KAAxBjD,EAAMiD,GAAOlB,MAAxB,IAGFW,GAAmBK,EACpB,CAaCG,EACD,EAEKC,EAAW,SAACrC,GAChB+B,EAAU,2BACLD,GADI,kBAEN9B,EAAuB,KAAhBd,EAAMc,IAAyB,gBAATA,IAEjC,EAwCD,OACE,uBACEb,UAAU,WAEVmD,SA1CiB,SAACjB,GACpBA,EAAMkB,iBAEqC,CACzC,QAAS,SAAU,UAAW,UACCC,MAAK,SAACL,GAAD,MAA4B,KAAjBjD,EAAMiD,EAAjB,IAGpCJ,GAAU,SAACU,GAAD,mBAAC,eACNA,GADK,IAERlD,MAAuB,KAAhBL,EAAMK,MACbF,OAAyB,KAAjBH,EAAMG,OACdK,QAA2B,KAAlBR,EAAMQ,QACfI,OAAyB,KAAjBZ,EAAMY,QALN,KAWZ0B,EAAM,CACJjC,MAAOL,EAAMK,MACbC,YAAaN,EAAMM,YACnBH,OAAQH,EAAMG,OACdK,QAASR,EAAMQ,QACfI,OAAQZ,EAAMY,SAGhB+B,EAAS,CACPtC,MAAO,GACPC,YAAa,GACbH,OAAQ,GACRK,QAAS,GACTI,OAAQ,KAGV8B,GAAkB,GACnB,EAGC,UAKE,oBAAIzC,UAAU,QAAd,yBAEA,cAAC,EAAD,CACEa,KAAK,QACLE,MAAM,QACND,MAAOf,EAAMK,MACbc,SAAU,SAACJ,GAAD,OAAW+B,EAAa,QAAS/B,EAAjC,EACVK,OAAQ,kBAAM+B,EAAS,QAAf,EACRjC,UAAQ,IAGV,cAAC,EAAD,CACEJ,KAAK,cACLE,MAAM,cACND,MAAOf,EAAMM,YACba,SAAU,SAACJ,GAAD,OAAW+B,EAAa,cAAe/B,EAAvC,IAGZ,cAAC,EAAD,CACED,KAAK,SACLE,MAAM,YACND,MAAOf,EAAMG,OACbgB,SAAU,SAACJ,GAAD,OAAW+B,EAAa,SAAU/B,EAAlC,EACVK,OAAQ,kBAAM+B,EAAS,SAAf,EACRjC,UAAQ,EACRG,SAAU,SAACN,GAAD,OAAWwB,EAAQiB,KAAKzC,EAAxB,IAGZ,cAAC,EAAD,CACED,KAAK,UACLE,MAAM,WACND,MAAOf,EAAMQ,QACbW,SAAU,SAACJ,GAAD,OAAW+B,EAAa,UAAW/B,EAAnC,EACVK,OAAQ,kBAAM+B,EAAS,UAAf,EACRjC,UAAQ,EACRG,SAAU,SAACN,GAAD,OAAWwB,EAAQiB,KAAKzC,EAAxB,IAGZ,cAAC,EAAD,CACED,KAAK,SACLE,MAAM,UACND,MAAOf,EAAMY,OACbO,SAAU,SAACJ,GAAD,OAAW+B,EAAa,SAAU/B,EAAlC,EACVK,OAAQ,kBAAM+B,EAAS,SAAf,EACRjC,UAAQ,IAGV,qBAAKjB,UAAU,mBAAf,SACE,qBAAKA,UAAU,UAAf,SACE,wBACEgC,KAAK,SACL,UAAQ,gBACRhC,UAAU,iBACVwD,SAAUhB,EAJZ,uBApDCD,EAgEV,E,QC7JYkB,EAAM,WACjB,MAA4BpC,mBAASqC,GAArC,mBAAOjD,EAAP,KAAekD,EAAf,KAMA,OACE,sBAAK3D,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYS,OAAQA,MAEtB,qBAAKT,UAAU,UAAf,SACE,cAAC,EAAD,CAAUqC,MAVC,SAACuB,GAChBD,GAAU,SAAAE,GAAa,4BAAQA,GAAR,CAAuBD,GAAvB,GACxB,QAYF,ECpBDE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,Q","file":"static/js/main.10b0779f.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n  onBlur?: () => void,\n  validate?: (value: string) => boolean,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => {},\n  onBlur = () => {},\n  validate = () => true,\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  const [touched, setTouched] = useState(false);\n  const hasError = touched && required && (!value.trim()\n  || !validate(value.trim()));\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={() => {\n            setTouched(true);\n            onBlur();\n          }}\n        />\n      </div>\n\n      {(touched && hasError) && (\n        <p className=\"help is-danger\">\n          {required && !value\n            ? `${label} is required`\n            : `Invalid ${label}`}\n        </p>\n      )}\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  // eslint-disable-next-line max-len\n  const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\n  const [count] = useState(0);\n  const [submitDisabled, setSubmitDisabled] = useState(true);\n\n  const [movie, setMovie] = useState<Movie>({\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  });\n\n  const [errors, setErrors] = useState({\n    title: false,\n    imgUrl: false,\n    imdbUrl: false,\n    imdbId: false,\n  });\n\n  const validateForm = () => {\n    const isValid = ['title', 'imgUrl', 'imdbUrl', 'imdbId'].every(\n      (field) => movie[field].trim() !== '',\n    );\n\n    setSubmitDisabled(!isValid);\n  };\n\n  const handleChange = (name: keyof Movie, value: string) => {\n    setMovie({\n      ...movie,\n      [name]: value,\n    });\n\n    setErrors({\n      ...errors,\n      [name]: false,\n    });\n\n    validateForm();\n  };\n\n  const handBlur = (name: keyof Movie) => {\n    setErrors({\n      ...errors,\n      [name]: movie[name] === '' || name !== 'description',\n    });\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const requiredFields: Array<keyof Movie> = [\n      'title', 'imgUrl', 'imdbUrl', 'imdbId'];\n    const hasErrors = requiredFields.some((field) => movie[field] === '');\n\n    if (hasErrors) {\n      setErrors((prevErrors) => ({\n        ...prevErrors,\n        title: movie.title === '',\n        imgUrl: movie.imgUrl === '',\n        imdbUrl: movie.imdbUrl === '',\n        imdbId: movie.imdbId === '',\n      }));\n\n      return;\n    }\n\n    onAdd({\n      title: movie.title,\n      description: movie.description,\n      imgUrl: movie.imgUrl,\n      imdbUrl: movie.imdbUrl,\n      imdbId: movie.imdbId,\n    });\n\n    setMovie({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n\n    setSubmitDisabled(true);\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={movie.title}\n        onChange={(value) => handleChange('title', value)}\n        onBlur={() => handBlur('title')}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={movie.description}\n        onChange={(value) => handleChange('description', value)}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={movie.imgUrl}\n        onChange={(value) => handleChange('imgUrl', value)}\n        onBlur={() => handBlur('imgUrl')}\n        required\n        validate={(value) => pattern.test(value)}\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={movie.imdbUrl}\n        onChange={(value) => handleChange('imdbUrl', value)}\n        onBlur={() => handBlur('imdbUrl')}\n        required\n        validate={(value) => pattern.test(value)}\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={movie.imdbId}\n        onChange={(value) => handleChange('imdbId', value)}\n        onBlur={() => handBlur('imdbId')}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={submitDisabled}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const addMovie = (newMovie: Movie) => {\n    setMovies(currentMovies => [...currentMovies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}